#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞ –∏ Mini App
"""

import requests
import json
import os
from typing import Optional

class TelegramBotSetup:
    def __init__(self):
        self.bot_token = None
        self.webhook_url = None
        
    def get_bot_token(self) -> Optional[str]:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("ü§ñ –ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM –ë–û–¢–ê")
        print("=" * 50)
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newbot")
        print("3. –í—ã–±–µ—Ä–∏—Ç–µ –∏–º—è –¥–ª—è –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: AI Gym Coach)")
        print("4. –í—ã–±–µ—Ä–∏—Ç–µ username –¥–ª—è –±–æ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: aigymcoach_bot)")
        print("5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω")
        print()
        
        token = input("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: ").strip()
        if token and token.startswith("5"):
            self.bot_token = token
            return token
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞!")
            return None
    
    def get_webhook_url(self) -> Optional[str]:
        """–ü–æ–ª—É—á–∏—Ç—å URL –¥–ª—è webhook"""
        print("\nüåê –ù–ê–°–¢–†–û–ô–ö–ê WEBHOOK")
        print("=" * 50)
        print("–î–ª—è —Ä–∞–±–æ—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º Telegram –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º –∏–∑–≤–Ω–µ.")
        print("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ngrok:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ngrok: https://ngrok.com/download")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ngrok http 8000")
        print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ HTTPS URL (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://abc123.ngrok.io)")
        print()
        
        url = input("–í–≤–µ–¥–∏—Ç–µ HTTPS URL –¥–ª—è webhook: ").strip()
        if url and url.startswith("https://"):
            self.webhook_url = url
            return url
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL! –î–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://")
            return None
    
    def test_bot_connection(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É"""
        if not self.bot_token:
            return False
            
        url = f"https://api.telegram.org/bot{self.bot_token}/getMe"
        try:
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                bot_info = response.json()
                print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info['result']['username']}")
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return False
    
    def set_webhook(self) -> bool:
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook –¥–ª—è –±–æ—Ç–∞"""
        if not self.bot_token or not self.webhook_url:
            return False
            
        webhook_url = f"{self.webhook_url}/webhook"
        url = f"https://api.telegram.org/bot{self.bot_token}/setWebhook"
        
        try:
            response = requests.post(url, json={
                "url": webhook_url,
                "allowed_updates": ["message", "callback_query"]
            }, timeout=10)
            
            if response.status_code == 200:
                result = response.json()
                if result.get("ok"):
                    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result.get('description')}")
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {e}")
            return False
    
    def create_mini_app(self) -> bool:
        """–°–æ–∑–¥–∞—Ç—å Mini App —á–µ—Ä–µ–∑ BotFather"""
        if not self.bot_token:
            return False
            
        print("\nüì± –ù–ê–°–¢–†–û–ô–ö–ê MINI APP")
        print("=" * 50)
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ @BotFather –≤ Telegram")
        print("2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /newapp")
        print("3. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞")
        print("4. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ Mini App (–Ω–∞–ø—Ä–∏–º–µ—Ä: AI Gym Coach)")
        print("5. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
        print("6. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∫–æ–Ω–∫—É (–∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)")
        print("7. –í–≤–µ–¥–∏—Ç–µ URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
        print(f"   {self.webhook_url.replace('/webhook', '')}")
        print("8. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π App ID")
        print()
        
        app_id = input("–í–≤–µ–¥–∏—Ç–µ App ID: ").strip()
        if app_id:
            print(f"‚úÖ Mini App —Å–æ–∑–¥–∞–Ω —Å ID: {app_id}")
            return True
        else:
            print("‚ùå App ID –Ω–µ –≤–≤–µ–¥–µ–Ω!")
            return False
    
    def save_config(self):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
        config = {
            "bot_token": self.bot_token,
            "webhook_url": self.webhook_url,
            "frontend_url": self.webhook_url.replace("/webhook", "") if self.webhook_url else None
        }
        
        with open("telegram_config.json", "w", encoding="utf-8") as f:
            json.dump(config, f, indent=2, ensure_ascii=False)
        
        print("\nüíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ telegram_config.json")
    
    def run_setup(self):
        """–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É"""
        print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM –ë–û–¢–ê –ò MINI APP")
        print("=" * 60)
        
        # –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
        if not self.get_bot_token():
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if not self.test_bot_connection():
            return False
        
        # –ü–æ–ª—É—á–∏—Ç—å webhook URL
        if not self.get_webhook_url():
            return False
        
        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook
        if not self.set_webhook():
            return False
        
        # –°–æ–∑–¥–∞—Ç—å Mini App
        if not self.create_mini_app():
            return False
        
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        self.save_config()
        
        print("\nüéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("=" * 60)
        print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
        print("1. –û—Ç–∫—Ä—ã—Ç—å –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram")
        print("2. –ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É 'Start' –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å /start")
        print("3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /app –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App")
        print("4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∞–ª—å–Ω–æ–º Telegram!")
        
        return True

def main():
    setup = TelegramBotSetup()
    setup.run_setup()

if __name__ == "__main__":
    main() 