import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { BottomNav } from '../components/BottomNav';
import levelService, { LevelData, XPSource, XPMultiplier } from '../services/levelService';
import { LevelProgress } from '../components/LevelProgress';
import hapticService from '../services/hapticService';

const LevelDetailsScreen: React.FC = () => {
  const navigate = useNavigate();
  const [levelData, setLevelData] = useState<LevelData>(levelService.getLevelData());
  const [xpHistory, setXpHistory] = useState<XPSource[]>(levelService.getXPHistory());
  const [multipliers, setMultipliers] = useState<XPMultiplier[]>(levelService.getActiveMultipliers());
  const [dailyStreak, setDailyStreak] = useState(levelService.getDailyStreak());
  const [activeTab, setActiveTab] = useState<'progress' | 'history' | 'bonuses'>('progress');

  useEffect(() => {
    const interval = setInterval(() => {
      setLevelData(levelService.getLevelData());
      setXpHistory(levelService.getXPHistory());
      setMultipliers(levelService.getActiveMultipliers());
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  const calculateTimeToNextLevel = (): string => {
    const xpNeeded = levelData.requiredXP - levelData.currentXP;
    const avgXpPerDay = 200; // –ü—Ä–∏–º–µ—Ä–Ω–æ
    const daysNeeded = Math.ceil(xpNeeded / avgXpPerDay);
    
    if (daysNeeded === 1) return '1 –¥–µ–Ω—å';
    if (daysNeeded < 5) return `${daysNeeded} –¥–Ω—è`;
    return `${daysNeeded} –¥–Ω–µ–π`;
  };

  const tabs = [
    { id: 'progress' as const, label: '–ü—Ä–æ–≥—Ä–µ—Å—Å', icon: 'üìà' },
    { id: 'history' as const, label: '–ò—Å—Ç–æ—Ä–∏—è', icon: 'üìú' },
    { id: 'bonuses' as const, label: '–ë–æ–Ω—É—Å—ã', icon: '‚ö°' }
  ];

  return (
    <div className="app-content">
      <div className="app-header">
        <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '10px' }}>
          <button 
            onClick={() => navigate(-1)}
            style={{
              background: 'transparent',
              border: 'none',
              color: 'var(--text-secondary)',
              fontSize: '24px',
              cursor: 'pointer'
            }}
          >
            ‚Üê
          </button>
          <h1>–°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π</h1>
        </div>
        <p>–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –æ–ø—ã—Ç –∏ –ø–æ–≤—ã—à–∞–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å</p>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É—Ä–æ–≤–Ω–µ */}
      <div style={{ padding: '10px' }}>
        <LevelProgress showDetails={true} />
      </div>

      {/* –¢–∞–±—ã */}
      <div style={{
        display: 'flex',
        gap: '5px',
        padding: '10px',
        borderBottom: '1px solid var(--border-color)'
      }}>
        {tabs.map(tab => (
          <button
            key={tab.id}
            onClick={() => {
              setActiveTab(tab.id);
              hapticService.light();
            }}
            style={{
              flex: 1,
              padding: '10px',
              background: activeTab === tab.id ? 'var(--primary-gradient)' : 'transparent',
              border: 'none',
              borderRadius: '8px',
              color: 'white',
              fontSize: '12px',
              cursor: 'pointer',
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              gap: '5px'
            }}
          >
            <span style={{ fontSize: '20px' }}>{tab.icon}</span>
            <span>{tab.label}</span>
          </button>
        ))}
      </div>

      <div style={{ flex: 1, overflow: 'auto', paddingBottom: '100px' }}>
        {activeTab === 'progress' && (
          <div style={{ padding: '20px' }}>
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <div style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(2, 1fr)',
              gap: '10px',
              marginBottom: '20px'
            }}>
              <div style={{
                background: 'var(--background-card)',
                borderRadius: '12px',
                padding: '15px',
                textAlign: 'center'
              }}>
                <div style={{ fontSize: '24px', marginBottom: '5px' }}>üìÖ</div>
                <div style={{ fontSize: '20px', fontWeight: 'bold' }}>{dailyStreak}</div>
                <div style={{ fontSize: '12px', color: 'var(--text-secondary)' }}>–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
              </div>
              
              <div style={{
                background: 'var(--background-card)',
                borderRadius: '12px',
                padding: '15px',
                textAlign: 'center'
              }}>
                <div style={{ fontSize: '24px', marginBottom: '5px' }}>‚è∞</div>
                <div style={{ fontSize: '20px', fontWeight: 'bold' }}>{calculateTimeToNextLevel()}</div>
                <div style={{ fontSize: '12px', color: 'var(--text-secondary)' }}>–î–æ —Å–ª–µ–¥. —É—Ä–æ–≤–Ω—è</div>
              </div>
              
              <div style={{
                background: 'var(--background-card)',
                borderRadius: '12px',
                padding: '15px',
                textAlign: 'center'
              }}>
                <div style={{ fontSize: '24px', marginBottom: '5px' }}>üí∞</div>
                <div style={{ fontSize: '20px', fontWeight: 'bold' }}>{levelData.totalXP.toLocaleString()}</div>
                <div style={{ fontSize: '12px', color: 'var(--text-secondary)' }}>–í—Å–µ–≥–æ XP</div>
              </div>
              
              <div style={{
                background: 'var(--background-card)',
                borderRadius: '12px',
                padding: '15px',
                textAlign: 'center'
              }}>
                <div style={{ fontSize: '24px', marginBottom: '5px' }}>{levelData.rankIcon}</div>
                <div style={{ fontSize: '20px', fontWeight: 'bold' }}>{levelData.rank}</div>
                <div style={{ fontSize: '12px', color: 'var(--text-secondary)' }}>–¢–µ–∫—É—â–∏–π —Ä–∞–Ω–≥</div>
              </div>
            </div>

            {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–∏—Ö —É—Ä–æ–≤–Ω–µ–π */}
            <div style={{
              background: 'var(--background-card)',
              borderRadius: '12px',
              padding: '15px',
              marginBottom: '20px'
            }}>
              <h3 style={{ marginBottom: '15px' }}>–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —É—Ä–æ–≤–Ω–∏</h3>
              {[1, 2, 3, 4, 5].map(offset => {
                const futureLevel = levelData.level + offset;
                const requiredXP = levelService['calculateRequiredXP'](futureLevel);
                
                return (
                  <div key={offset} style={{
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'space-between',
                    padding: '10px 0',
                    borderBottom: offset < 5 ? '1px solid var(--border-color)' : 'none'
                  }}>
                    <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
                      <div style={{
                        width: '40px',
                        height: '40px',
                        borderRadius: '50%',
                        background: 'rgba(102, 126, 234, 0.1)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        fontWeight: 'bold'
                      }}>
                        {futureLevel}
                      </div>
                      <div>
                        <div style={{ fontSize: '14px', fontWeight: 'bold' }}>
                          –£—Ä–æ–≤–µ–Ω—å {futureLevel}
                        </div>
                        <div style={{ fontSize: '12px', color: 'var(--text-secondary)' }}>
                          –¢—Ä–µ–±—É–µ—Ç—Å—è {requiredXP.toLocaleString()} XP
                        </div>
                      </div>
                    </div>
                    {futureLevel % 10 === 0 && (
                      <span style={{
                        padding: '4px 8px',
                        background: 'linear-gradient(135deg, #ffd700, #ffed4e)',
                        borderRadius: '8px',
                        fontSize: '10px',
                        fontWeight: 'bold',
                        color: 'black'
                      }}>
                        –û—Å–æ–±—ã–π
                      </span>
                    )}
                  </div>
                );
              })}
            </div>
          </div>
        )}

        {activeTab === 'history' && (
          <div style={{ padding: '20px' }}>
            <h3 style={{ marginBottom: '15px' }}>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è XP</h3>
            {xpHistory.length === 0 ? (
              <div style={{
                textAlign: 'center',
                padding: '40px',
                color: 'var(--text-secondary)'
              }}>
                <div style={{ fontSize: '48px', marginBottom: '10px' }}>üìù</div>
                <p>–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞</p>
                <p style={{ fontSize: '12px' }}>–ù–∞—á–Ω–∏—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å XP!</p>
              </div>
            ) : (
              <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                {xpHistory.reverse().map((item, index) => (
                  <div
                    key={index}
                    style={{
                      background: 'var(--background-card)',
                      borderRadius: '8px',
                      padding: '10px',
                      display: 'flex',
                      alignItems: 'center',
                      gap: '10px',
                      animation: `fadeIn 0.3s ease-out ${index * 0.05}s both`
                    }}
                  >
                    <div style={{ fontSize: '24px' }}>{item.icon}</div>
                    <div style={{ flex: 1 }}>
                      <div style={{ fontSize: '14px', fontWeight: 'bold' }}>
                        {item.name}
                      </div>
                      <div style={{ fontSize: '11px', color: 'var(--text-secondary)' }}>
                        {item.timestamp && new Date(item.timestamp).toLocaleTimeString('ru-RU')}
                        {item.multiplier && item.multiplier > 1 && (
                          <span style={{ color: '#ffd700', marginLeft: '5px' }}>
                            x{item.multiplier.toFixed(1)}
                          </span>
                        )}
                      </div>
                    </div>
                    <div style={{
                      fontSize: '16px',
                      fontWeight: 'bold',
                      color: '#4ade80'
                    }}>
                      +{item.xp}
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}

        {activeTab === 'bonuses' && (
          <div style={{ padding: '20px' }}>
            {/* –ê–∫—Ç–∏–≤–Ω—ã–µ –º–Ω–æ–∂–∏—Ç–µ–ª–∏ */}
            {multipliers.length > 0 && (
              <div style={{ marginBottom: '20px' }}>
                <h3 style={{ marginBottom: '15px' }}>–ê–∫—Ç–∏–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã</h3>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>
                  {multipliers.map((mult, index) => (
                    <div
                      key={index}
                      style={{
                        background: 'linear-gradient(135deg, rgba(255, 215, 0, 0.1), rgba(255, 215, 0, 0.05))',
                        borderRadius: '12px',
                        padding: '15px',
                        border: '1px solid rgba(255, 215, 0, 0.3)'
                      }}
                    >
                      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '5px' }}>
                        <span style={{ fontWeight: 'bold' }}>{mult.description}</span>
                        <span style={{ color: '#ffd700', fontWeight: 'bold' }}>x{mult.value}</span>
                      </div>
                      {mult.expiresAt && (
                        <div style={{ fontSize: '12px', color: 'var(--text-secondary)' }}>
                          –ò—Å—Ç–µ–∫–∞–µ—Ç: {new Date(mult.expiresAt).toLocaleTimeString('ru-RU')}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* –ò—Å—Ç–æ—á–Ω–∏–∫–∏ XP */}
            <div>
              <h3 style={{ marginBottom: '15px' }}>–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å XP</h3>
              
              <div style={{ marginBottom: '20px' }}>
                <h4 style={{ fontSize: '14px', marginBottom: '10px', color: 'var(--text-secondary)' }}>
                  üí™ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
                </h4>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                  {[
                    { name: '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', xp: 50, icon: '‚úÖ' },
                    { name: '–ò–¥–µ–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', xp: 100, icon: '‚≠ê' },
                    { name: '–£—Ç—Ä–µ–Ω–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', xp: 25, icon: 'üåÖ', bonus: 'x1.3' },
                    { name: '–õ–∏—á–Ω—ã–π —Ä–µ–∫–æ—Ä–¥', xp: 75, icon: 'üéØ' }
                  ].map((source, index) => (
                    <div
                      key={index}
                      style={{
                        background: 'var(--background-card)',
                        borderRadius: '8px',
                        padding: '10px',
                        display: 'flex',
                        alignItems: 'center',
                        gap: '10px'
                      }}
                    >
                      <span style={{ fontSize: '20px' }}>{source.icon}</span>
                      <span style={{ flex: 1, fontSize: '14px' }}>{source.name}</span>
                      <span style={{ fontWeight: 'bold', color: '#4ade80' }}>
                        +{source.xp} XP
                      </span>
                      {source.bonus && (
                        <span style={{ fontSize: '12px', color: '#ffd700' }}>
                          {source.bonus}
                        </span>
                      )}
                    </div>
                  ))}
                </div>
              </div>

              <div style={{ marginBottom: '20px' }}>
                <h4 style={{ fontSize: '14px', marginBottom: '10px', color: 'var(--text-secondary)' }}>
                  üë• –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ
                </h4>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                  {[
                    { name: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∞', xp: 20, icon: 'ü§ù' },
                    { name: '–ü–æ–±–µ–¥–∞ –≤ —á–µ–ª–ª–µ–Ω–¥–∂–µ', xp: 150, icon: 'ü•á' },
                    { name: '–ü–æ–ª—É—á–µ–Ω –ª–∞–π–∫', xp: 5, icon: '‚ù§Ô∏è' },
                    { name: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º', xp: 15, icon: 'üì±' }
                  ].map((source, index) => (
                    <div
                      key={index}
                      style={{
                        background: 'var(--background-card)',
                        borderRadius: '8px',
                        padding: '10px',
                        display: 'flex',
                        alignItems: 'center',
                        gap: '10px'
                      }}
                    >
                      <span style={{ fontSize: '20px' }}>{source.icon}</span>
                      <span style={{ flex: 1, fontSize: '14px' }}>{source.name}</span>
                      <span style={{ fontWeight: 'bold', color: '#4ade80' }}>
                        +{source.xp} XP
                      </span>
                    </div>
                  ))}
                </div>
              </div>

              <div>
                <h4 style={{ fontSize: '14px', marginBottom: '10px', color: 'var(--text-secondary)' }}>
                  üìÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ
                </h4>
                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>
                  {[
                    { name: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≤—Ö–æ–¥', xp: 10, icon: 'üìÖ' },
                    { name: '–ù–µ–¥–µ–ª—è –≤—Ö–æ–¥–æ–≤ –ø–æ–¥—Ä—è–¥', xp: 100, icon: '7Ô∏è‚É£' },
                    { name: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ', xp: 40, icon: 'üéâ', bonus: 'x1.5' }
                  ].map((source, index) => (
                    <div
                      key={index}
                      style={{
                        background: 'var(--background-card)',
                        borderRadius: '8px',
                        padding: '10px',
                        display: 'flex',
                        alignItems: 'center',
                        gap: '10px'
                      }}
                    >
                      <span style={{ fontSize: '20px' }}>{source.icon}</span>
                      <span style={{ flex: 1, fontSize: '14px' }}>{source.name}</span>
                      <span style={{ fontWeight: 'bold', color: '#4ade80' }}>
                        +{source.xp} XP
                      </span>
                      {source.bonus && (
                        <span style={{ fontSize: '12px', color: '#ffd700' }}>
                          {source.bonus}
                        </span>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        )}
      </div>

      <BottomNav />
    </div>
  );
};

export default LevelDetailsScreen;