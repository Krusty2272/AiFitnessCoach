import React, { useState, useEffect } from 'react';
import { Card, CardHeader, CardTitle, CardContent } from '../components/ui/Card';
import { Button } from '../components/ui/Button';
import { StatsCard } from '../components/StatsCard';
import { ProgressCard } from '../components/ProgressCard';
import { TelegramService } from '../services/telegramService';

interface UserProfile {
  id: number;
  username: string;
  first_name: string;
  last_name: string;
  email?: string;
  created_at: string;
  total_workouts: number;
  total_exercises: number;
  current_streak: number;
  longest_streak: number;
  total_time: number; // in minutes
  favorite_muscle_group: string;
}

export const ProfilePage: React.FC = () => {
  const [profile, setProfile] = useState<UserProfile | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Initialize Telegram WebApp
    if (TelegramService.isTelegramWebApp()) {
      TelegramService.init();
    }

    // Simulate loading profile data
    setTimeout(() => {
      const mockProfile: UserProfile = {
        id: 123456789,
        username: 'fitness_user',
        first_name: '–ê–ª–µ–∫—Å–µ–π',
        last_name: '–ü–µ—Ç—Ä–æ–≤',
        email: 'alex@example.com',
        created_at: '2024-01-15T10:00:00Z',
        total_workouts: 24,
        total_exercises: 156,
        current_streak: 7,
        longest_streak: 14,
        total_time: 1080, // 18 hours
        favorite_muscle_group: '–ì—Ä—É–¥—å'
      };

      setProfile(mockProfile);
      setLoading(false);
    }, 1000);
  }, []);

  const handleBack = () => {
    window.history.pushState({}, '', '/');
  };

  const handleEditProfile = () => {
    if (TelegramService.isTelegramWebApp()) {
      TelegramService.showAlert('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
    } else {
      alert('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
    }
  };

  const handleExportData = () => {
    if (TelegramService.isTelegramWebApp()) {
      TelegramService.showAlert('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
    } else {
      alert('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!');
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-900 flex items-center justify-center p-4">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-500 mx-auto"></div>
          <p className="mt-4 text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...</p>
        </div>
      </div>
    );
  }

  if (!profile) {
    return (
      <div className="min-h-screen bg-gray-900 flex items-center justify-center p-4">
        <div className="text-center">
          <p className="text-gray-400">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è</p>
          <Button onClick={handleBack} className="mt-4">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π
          </Button>
        </div>
      </div>
    );
  }

  const stats = [
    {
      label: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫',
      value: profile.total_workouts,
      icon: 'üèãÔ∏è',
      color: 'text-indigo-400'
    },
    {
      label: '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–π',
      value: profile.total_exercises,
      icon: 'üí™',
      color: 'text-emerald-400'
    },
    {
      label: '–°–µ—Ä–∏—è',
      value: profile.current_streak,
      icon: 'üî•',
      color: 'text-amber-400'
    },
    {
      label: '–í—Ä–µ–º—è',
      value: `${Math.floor(profile.total_time / 60)}—á`,
      icon: '‚è±Ô∏è',
      color: 'text-rose-400'
    }
  ];

  const progressItems = [
    {
      label: '–¶–µ–ª—å: —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –Ω–µ–¥–µ–ª—é',
      current: 3,
      target: 4,
      unit: '—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
      color: 'bg-indigo-500'
    },
    {
      label: '–¶–µ–ª—å: –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
      current: 45,
      target: 60,
      unit: '–º–∏–Ω—É—Ç',
      color: 'bg-emerald-500'
    },
    {
      label: '–¶–µ–ª—å: —Å–µ—Ä–∏—è –¥–Ω–µ–π',
      current: profile.current_streak,
      target: 30,
      unit: '–¥–Ω–µ–π',
      color: 'bg-amber-500'
    }
  ];

  return (
    <div className="min-h-screen bg-gray-900 p-4 pb-20">
      <div className="max-w-md mx-auto space-y-6">
        {/* Header */}
        <div className="text-center pt-4 pb-6">
          <h1 className="text-2xl font-bold text-white mb-2">
            –ü—Ä–æ—Ñ–∏–ª—å
          </h1>
          <p className="text-gray-400">
            –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
          </p>
        </div>

        {/* Profile Info */}
        <Card className="slide-up">
          <CardContent className="p-6 text-center">
            <div className="w-20 h-20 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full mx-auto flex items-center justify-center mb-4">
              <span className="text-2xl font-bold text-white">
                {profile.first_name.charAt(0)}{profile.last_name.charAt(0)}
              </span>
            </div>
            <h2 className="text-xl font-bold text-white mb-1">
              {profile.first_name} {profile.last_name}
            </h2>
            <p className="text-gray-400 mb-4">@{profile.username}</p>
            <div className="bg-gray-800 rounded-xl p-3">
              <div className="text-sm text-gray-400 mb-1">–õ—é–±–∏–º–∞—è –≥—Ä—É–ø–ø–∞ –º—ã—à—Ü</div>
              <div className="text-white font-medium">{profile.favorite_muscle_group}</div>
            </div>
          </CardContent>
        </Card>

        {/* Stats */}
        <StatsCard stats={stats} />

        {/* Progress */}
        <ProgressCard items={progressItems} />

        {/* Achievements */}
        <Card>
          <CardHeader>
            <CardTitle>üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <div className="flex items-center p-3 bg-gray-800 rounded-xl">
                <div className="w-10 h-10 bg-amber-500/20 rounded-full flex items-center justify-center mr-3">
                  <span className="text-amber-400">üî•</span>
                </div>
                <div className="flex-1">
                  <div className="font-medium text-white">–°–µ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</div>
                  <div className="text-sm text-gray-400">
                    {profile.longest_streak} –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
                  </div>
                </div>
                <div className="text-amber-400">‚úì</div>
              </div>
              
              <div className="flex items-center p-3 bg-gray-800 rounded-xl">
                <div className="w-10 h-10 bg-indigo-500/20 rounded-full flex items-center justify-center mr-3">
                  <span className="text-indigo-400">üí™</span>
                </div>
                <div className="flex-1">
                  <div className="font-medium text-white">–ü–µ—Ä–≤—ã–µ 10 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</div>
                  <div className="text-sm text-gray-400">
                    –ó–∞–≤–µ—Ä—à–µ–Ω–æ {Math.min(profile.total_workouts, 10)}/10
                  </div>
                </div>
                <div className="text-indigo-400">
                  {profile.total_workouts >= 10 ? '‚úì' : '...'}
                </div>
              </div>
              
              <div className="flex items-center p-3 bg-gray-800 rounded-xl">
                <div className="w-10 h-10 bg-emerald-500/20 rounded-full flex items-center justify-center mr-3">
                  <span className="text-emerald-400">‚è±Ô∏è</span>
                </div>
                <div className="flex-1">
                  <div className="font-medium text-white">10 —á–∞—Å–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫</div>
                  <div className="text-sm text-gray-400">
                    {Math.floor(profile.total_time / 60)}/10 —á–∞—Å–æ–≤
                  </div>
                </div>
                <div className="text-emerald-400">
                  {profile.total_time >= 600 ? '‚úì' : '...'}
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Actions */}
        <Card>
          <CardHeader>
            <CardTitle>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</CardTitle>
          </CardHeader>
          <CardContent className="space-y-3">
            <Button
              onClick={handleEditProfile}
              className="w-full"
              variant="outline"
            >
              ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
            </Button>
            <Button
              onClick={handleExportData}
              className="w-full"
              variant="outline"
            >
              üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
            </Button>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}; 